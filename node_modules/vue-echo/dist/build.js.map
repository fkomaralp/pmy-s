{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///build.js","webpack:///webpack/bootstrap bb661a2a376b3f892754","webpack:///./vue-echo.js","webpack:///./~/laravel-echo/dist/echo.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","prototype","_laravelEcho","_laravelEcho2","install","Vue","options","Error","socketId","$echo","Echo","mixin","mounted","channel","$options","startsWith","private","replace","join","events","keys","forEach","key","_this","listen","payload","beforeDestroy","leave","classCallCheck","AwaitValue","AsyncGenerator","gen","send","arg","Promise","resolve","reject","request","next","back","front","resume","result","then","settle","done","err","type","_invoke","return","undefined","asyncIterator","throw","wrap","fn","apply","arguments","await","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","_extends","assign","source","hasOwnProperty","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","Connector","_defaultOptions","auth","headers","authEndpoint","broadcaster","csrfToken","host","namespace","setOptions","connect","selector","window","document","querySelector","getAttribute","Channel","callback","event","EventFormatter","setNamespace","charAt","substr","PusherChannel","_Channel","pusher","name","getPrototypeOf","eventFormatter","subscribe","subscription","unsubscribe","on","format","unbind","bind","PusherPrivateChannel","_PusherChannel","eventName","data","channels","trigger","PusherPresenceChannel","members","map","k","member","info","SocketIoChannel","socket","configureReconnector","emit","_this2","listener","_this3","push","_this4","removeListener","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","user_info","NullChannel","NullPrivateChannel","_NullChannel","NullPresenceChannel","PusherConnector","_Connector","_ref","_len","args","Array","_key","concat","Pusher","index","connection","socket_id","disconnect","SocketIoConnector","io","getSocketIO","client","NullConnector","http","registerVueRequestInterceptor","axios","registerAxiosRequestInterceptor","jQuery","registerjQueryAjaxSetup","connector","interceptors","set","use","config","ajax","ajaxSetup","beforeSend","xhr","setRequestHeader","_channel","privateChannel","presenceChannel"],"mappings":"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","file":"build.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueEcho\"] = factory();\n\telse\n\t\troot[\"VueEcho\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueEcho\"] = factory();\n\telse\n\t\troot[\"VueEcho\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _laravelEcho = __webpack_require__(2);\n\t\n\tvar _laravelEcho2 = _interopRequireDefault(_laravelEcho);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    install: function install(Vue, options) {\n\t        if (!options) {\n\t            throw new Error(\"[Vue-Echo] cannot locate options\");\n\t        }\n\t\n\t        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n\t            throw new Error(\"[Vue-Echo] cannot initiate options\");\n\t        }\n\t\n\t        if (typeof options.socketId == 'function') {\n\t            Vue.prototype.$echo = options;\n\t        } else {\n\t            Vue.prototype.$echo = new _laravelEcho2.default(options);\n\t        }\n\t\n\t        Vue.mixin({\n\t            mounted: function mounted() {\n\t                var channel = this.$options['channel'];\n\t\n\t                if (channel) {\n\t                    if (channel.startsWith('private:')) {\n\t                        this.channel = this.$echo.private(channel.replace('private:', ''));\n\t                    } else if (channel.startsWith('presence:')) {\n\t                        this.channel = this.$echo.join(channel.replace('presence:', ''));\n\t                    } else {\n\t                        this.channel = this.$echo.channel(channel);\n\t                    }\n\t\n\t                    var events = this.$options['echo'];\n\t\n\t                    if (events) {\n\t                        Object.keys(events).forEach(function (key) {\n\t                            var _this = this;\n\t\n\t                            // Bind the VM as second parameter\n\t                            this.channel.listen(key, function (payload) {\n\t                                events[key](payload, _this);\n\t                            });\n\t                        }, this);\n\t                    }\n\t                }\n\t            },\n\t            beforeDestroy: function beforeDestroy() {\n\t                var channel = this.$options['channel'];\n\t\n\t                if (channel) {\n\t                    if (channel.startsWith('private:')) {\n\t                        channel = channel.replace('private:', '');\n\t                    } else if (channel.startsWith('presence:')) {\n\t                        channel = channel.replace('presence:', '');\n\t                    }\n\t\n\t                    this.$echo.leave(channel);\n\t                }\n\t            }\n\t        });\n\t    }\n\t};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tvar asyncGenerator = function () {\n\t  function AwaitValue(value) {\n\t    this.value = value;\n\t  }\n\t\n\t  function AsyncGenerator(gen) {\n\t    var front, back;\n\t\n\t    function send(key, arg) {\n\t      return new Promise(function (resolve, reject) {\n\t        var request = {\n\t          key: key,\n\t          arg: arg,\n\t          resolve: resolve,\n\t          reject: reject,\n\t          next: null\n\t        };\n\t\n\t        if (back) {\n\t          back = back.next = request;\n\t        } else {\n\t          front = back = request;\n\t          resume(key, arg);\n\t        }\n\t      });\n\t    }\n\t\n\t    function resume(key, arg) {\n\t      try {\n\t        var result = gen[key](arg);\n\t        var value = result.value;\n\t\n\t        if (value instanceof AwaitValue) {\n\t          Promise.resolve(value.value).then(function (arg) {\n\t            resume(\"next\", arg);\n\t          }, function (arg) {\n\t            resume(\"throw\", arg);\n\t          });\n\t        } else {\n\t          settle(result.done ? \"return\" : \"normal\", result.value);\n\t        }\n\t      } catch (err) {\n\t        settle(\"throw\", err);\n\t      }\n\t    }\n\t\n\t    function settle(type, value) {\n\t      switch (type) {\n\t        case \"return\":\n\t          front.resolve({\n\t            value: value,\n\t            done: true\n\t          });\n\t          break;\n\t\n\t        case \"throw\":\n\t          front.reject(value);\n\t          break;\n\t\n\t        default:\n\t          front.resolve({\n\t            value: value,\n\t            done: false\n\t          });\n\t          break;\n\t      }\n\t\n\t      front = front.next;\n\t\n\t      if (front) {\n\t        resume(front.key, front.arg);\n\t      } else {\n\t        back = null;\n\t      }\n\t    }\n\t\n\t    this._invoke = send;\n\t\n\t    if (typeof gen.return !== \"function\") {\n\t      this.return = undefined;\n\t    }\n\t  }\n\t\n\t  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n\t    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n\t      return this;\n\t    };\n\t  }\n\t\n\t  AsyncGenerator.prototype.next = function (arg) {\n\t    return this._invoke(\"next\", arg);\n\t  };\n\t\n\t  AsyncGenerator.prototype.throw = function (arg) {\n\t    return this._invoke(\"throw\", arg);\n\t  };\n\t\n\t  AsyncGenerator.prototype.return = function (arg) {\n\t    return this._invoke(\"return\", arg);\n\t  };\n\t\n\t  return {\n\t    wrap: function (fn) {\n\t      return function () {\n\t        return new AsyncGenerator(fn.apply(this, arguments));\n\t      };\n\t    },\n\t    await: function (value) {\n\t      return new AwaitValue(value);\n\t    }\n\t  };\n\t}();\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\t\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\t\n\tvar _extends = Object.assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\t\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return target;\n\t};\n\t\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\t\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\t\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\t\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\t\n\tvar Connector = function () {\n\t    function Connector(options) {\n\t        classCallCheck(this, Connector);\n\t\n\t        this._defaultOptions = {\n\t            auth: {\n\t                headers: {}\n\t            },\n\t            authEndpoint: '/broadcasting/auth',\n\t            broadcaster: 'pusher',\n\t            csrfToken: null,\n\t            host: null,\n\t            key: null,\n\t            namespace: 'App.Events'\n\t        };\n\t        this.setOptions(options);\n\t        this.connect();\n\t    }\n\t\n\t    createClass(Connector, [{\n\t        key: 'setOptions',\n\t        value: function setOptions(options) {\n\t            this.options = _extends(this._defaultOptions, options);\n\t            if (this.csrfToken()) {\n\t                this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n\t            }\n\t            return options;\n\t        }\n\t    }, {\n\t        key: 'csrfToken',\n\t        value: function csrfToken() {\n\t            var selector = void 0;\n\t            if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n\t                return window['Laravel'].csrfToken;\n\t            } else if (this.options.csrfToken) {\n\t                return this.options.csrfToken;\n\t            } else if (typeof document !== 'undefined' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n\t                return selector.getAttribute('content');\n\t            }\n\t            return null;\n\t        }\n\t    }]);\n\t    return Connector;\n\t}();\n\t\n\tvar Channel = function () {\n\t    function Channel() {\n\t        classCallCheck(this, Channel);\n\t    }\n\t\n\t    createClass(Channel, [{\n\t        key: 'notification',\n\t        value: function notification(callback) {\n\t            return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n\t        }\n\t    }, {\n\t        key: 'listenForWhisper',\n\t        value: function listenForWhisper(event, callback) {\n\t            return this.listen('.client-' + event, callback);\n\t        }\n\t    }]);\n\t    return Channel;\n\t}();\n\t\n\tvar EventFormatter = function () {\n\t    function EventFormatter(namespace) {\n\t        classCallCheck(this, EventFormatter);\n\t\n\t        this.setNamespace(namespace);\n\t    }\n\t\n\t    createClass(EventFormatter, [{\n\t        key: 'format',\n\t        value: function format(event) {\n\t            if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n\t                return event.substr(1);\n\t            } else if (this.namespace) {\n\t                event = this.namespace + '.' + event;\n\t            }\n\t            return event.replace(/\\./g, '\\\\');\n\t        }\n\t    }, {\n\t        key: 'setNamespace',\n\t        value: function setNamespace(value) {\n\t            this.namespace = value;\n\t        }\n\t    }]);\n\t    return EventFormatter;\n\t}();\n\t\n\tvar PusherChannel = function (_Channel) {\n\t    inherits(PusherChannel, _Channel);\n\t\n\t    function PusherChannel(pusher, name, options) {\n\t        classCallCheck(this, PusherChannel);\n\t\n\t        var _this = possibleConstructorReturn(this, (PusherChannel.__proto__ || Object.getPrototypeOf(PusherChannel)).call(this));\n\t\n\t        _this.name = name;\n\t        _this.pusher = pusher;\n\t        _this.options = options;\n\t        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\t        _this.subscribe();\n\t        return _this;\n\t    }\n\t\n\t    createClass(PusherChannel, [{\n\t        key: 'subscribe',\n\t        value: function subscribe() {\n\t            this.subscription = this.pusher.subscribe(this.name);\n\t        }\n\t    }, {\n\t        key: 'unsubscribe',\n\t        value: function unsubscribe() {\n\t            this.pusher.unsubscribe(this.name);\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(event, callback) {\n\t            this.on(this.eventFormatter.format(event), callback);\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'stopListening',\n\t        value: function stopListening(event) {\n\t            this.subscription.unbind(this.eventFormatter.format(event));\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(event, callback) {\n\t            this.subscription.bind(event, callback);\n\t            return this;\n\t        }\n\t    }]);\n\t    return PusherChannel;\n\t}(Channel);\n\t\n\tvar PusherPrivateChannel = function (_PusherChannel) {\n\t    inherits(PusherPrivateChannel, _PusherChannel);\n\t\n\t    function PusherPrivateChannel() {\n\t        classCallCheck(this, PusherPrivateChannel);\n\t        return possibleConstructorReturn(this, (PusherPrivateChannel.__proto__ || Object.getPrototypeOf(PusherPrivateChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(PusherPrivateChannel, [{\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n\t            return this;\n\t        }\n\t    }]);\n\t    return PusherPrivateChannel;\n\t}(PusherChannel);\n\t\n\tvar PusherPresenceChannel = function (_PusherChannel) {\n\t    inherits(PusherPresenceChannel, _PusherChannel);\n\t\n\t    function PusherPresenceChannel() {\n\t        classCallCheck(this, PusherPresenceChannel);\n\t        return possibleConstructorReturn(this, (PusherPresenceChannel.__proto__ || Object.getPrototypeOf(PusherPresenceChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(PusherPresenceChannel, [{\n\t        key: 'here',\n\t        value: function here(callback) {\n\t            this.on('pusher:subscription_succeeded', function (data) {\n\t                callback(Object.keys(data.members).map(function (k) {\n\t                    return data.members[k];\n\t                }));\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'joining',\n\t        value: function joining(callback) {\n\t            this.on('pusher:member_added', function (member) {\n\t                callback(member.info);\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'leaving',\n\t        value: function leaving(callback) {\n\t            this.on('pusher:member_removed', function (member) {\n\t                callback(member.info);\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n\t            return this;\n\t        }\n\t    }]);\n\t    return PusherPresenceChannel;\n\t}(PusherChannel);\n\t\n\tvar SocketIoChannel = function (_Channel) {\n\t    inherits(SocketIoChannel, _Channel);\n\t\n\t    function SocketIoChannel(socket, name, options) {\n\t        classCallCheck(this, SocketIoChannel);\n\t\n\t        var _this = possibleConstructorReturn(this, (SocketIoChannel.__proto__ || Object.getPrototypeOf(SocketIoChannel)).call(this));\n\t\n\t        _this.events = {};\n\t        _this.name = name;\n\t        _this.socket = socket;\n\t        _this.options = options;\n\t        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\t        _this.subscribe();\n\t        _this.configureReconnector();\n\t        return _this;\n\t    }\n\t\n\t    createClass(SocketIoChannel, [{\n\t        key: 'subscribe',\n\t        value: function subscribe() {\n\t            this.socket.emit('subscribe', {\n\t                channel: this.name,\n\t                auth: this.options.auth || {}\n\t            });\n\t        }\n\t    }, {\n\t        key: 'unsubscribe',\n\t        value: function unsubscribe() {\n\t            this.unbind();\n\t            this.socket.emit('unsubscribe', {\n\t                channel: this.name,\n\t                auth: this.options.auth || {}\n\t            });\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(event, callback) {\n\t            this.on(this.eventFormatter.format(event), callback);\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(event, callback) {\n\t            var _this2 = this;\n\t\n\t            var listener = function listener(channel, data) {\n\t                if (_this2.name == channel) {\n\t                    callback(data);\n\t                }\n\t            };\n\t            this.socket.on(event, listener);\n\t            this.bind(event, listener);\n\t        }\n\t    }, {\n\t        key: 'configureReconnector',\n\t        value: function configureReconnector() {\n\t            var _this3 = this;\n\t\n\t            var listener = function listener() {\n\t                _this3.subscribe();\n\t            };\n\t            this.socket.on('reconnect', listener);\n\t            this.bind('reconnect', listener);\n\t        }\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(event, callback) {\n\t            this.events[event] = this.events[event] || [];\n\t            this.events[event].push(callback);\n\t        }\n\t    }, {\n\t        key: 'unbind',\n\t        value: function unbind() {\n\t            var _this4 = this;\n\t\n\t            Object.keys(this.events).forEach(function (event) {\n\t                _this4.events[event].forEach(function (callback) {\n\t                    _this4.socket.removeListener(event, callback);\n\t                });\n\t                delete _this4.events[event];\n\t            });\n\t        }\n\t    }]);\n\t    return SocketIoChannel;\n\t}(Channel);\n\t\n\tvar SocketIoPrivateChannel = function (_SocketIoChannel) {\n\t    inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\t\n\t    function SocketIoPrivateChannel() {\n\t        classCallCheck(this, SocketIoPrivateChannel);\n\t        return possibleConstructorReturn(this, (SocketIoPrivateChannel.__proto__ || Object.getPrototypeOf(SocketIoPrivateChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(SocketIoPrivateChannel, [{\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            this.socket.emit('client event', {\n\t                channel: this.name,\n\t                event: 'client-' + eventName,\n\t                data: data\n\t            });\n\t            return this;\n\t        }\n\t    }]);\n\t    return SocketIoPrivateChannel;\n\t}(SocketIoChannel);\n\t\n\tvar SocketIoPresenceChannel = function (_SocketIoPrivateChann) {\n\t    inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\t\n\t    function SocketIoPresenceChannel() {\n\t        classCallCheck(this, SocketIoPresenceChannel);\n\t        return possibleConstructorReturn(this, (SocketIoPresenceChannel.__proto__ || Object.getPrototypeOf(SocketIoPresenceChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(SocketIoPresenceChannel, [{\n\t        key: 'here',\n\t        value: function here(callback) {\n\t            this.on('presence:subscribed', function (members) {\n\t                callback(members.map(function (m) {\n\t                    return m.user_info;\n\t                }));\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'joining',\n\t        value: function joining(callback) {\n\t            this.on('presence:joining', function (member) {\n\t                return callback(member.user_info);\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'leaving',\n\t        value: function leaving(callback) {\n\t            this.on('presence:leaving', function (member) {\n\t                return callback(member.user_info);\n\t            });\n\t            return this;\n\t        }\n\t    }]);\n\t    return SocketIoPresenceChannel;\n\t}(SocketIoPrivateChannel);\n\t\n\tvar NullChannel = function (_Channel) {\n\t    inherits(NullChannel, _Channel);\n\t\n\t    function NullChannel() {\n\t        classCallCheck(this, NullChannel);\n\t        return possibleConstructorReturn(this, (NullChannel.__proto__ || Object.getPrototypeOf(NullChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(NullChannel, [{\n\t        key: 'subscribe',\n\t        value: function subscribe() {}\n\t    }, {\n\t        key: 'unsubscribe',\n\t        value: function unsubscribe() {}\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(event, callback) {\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'stopListening',\n\t        value: function stopListening(event) {\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(event, callback) {\n\t            return this;\n\t        }\n\t    }]);\n\t    return NullChannel;\n\t}(Channel);\n\t\n\tvar NullPrivateChannel = function (_NullChannel) {\n\t    inherits(NullPrivateChannel, _NullChannel);\n\t\n\t    function NullPrivateChannel() {\n\t        classCallCheck(this, NullPrivateChannel);\n\t        return possibleConstructorReturn(this, (NullPrivateChannel.__proto__ || Object.getPrototypeOf(NullPrivateChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(NullPrivateChannel, [{\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            return this;\n\t        }\n\t    }]);\n\t    return NullPrivateChannel;\n\t}(NullChannel);\n\t\n\tvar NullPresenceChannel = function (_NullChannel) {\n\t    inherits(NullPresenceChannel, _NullChannel);\n\t\n\t    function NullPresenceChannel() {\n\t        classCallCheck(this, NullPresenceChannel);\n\t        return possibleConstructorReturn(this, (NullPresenceChannel.__proto__ || Object.getPrototypeOf(NullPresenceChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(NullPresenceChannel, [{\n\t        key: 'here',\n\t        value: function here(callback) {\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'joining',\n\t        value: function joining(callback) {\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'leaving',\n\t        value: function leaving(callback) {\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            return this;\n\t        }\n\t    }]);\n\t    return NullPresenceChannel;\n\t}(NullChannel);\n\t\n\tvar PusherConnector = function (_Connector) {\n\t    inherits(PusherConnector, _Connector);\n\t\n\t    function PusherConnector() {\n\t        var _ref;\n\t\n\t        classCallCheck(this, PusherConnector);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        var _this = possibleConstructorReturn(this, (_ref = PusherConnector.__proto__ || Object.getPrototypeOf(PusherConnector)).call.apply(_ref, [this].concat(args)));\n\t\n\t        _this.channels = {};\n\t        return _this;\n\t    }\n\t\n\t    createClass(PusherConnector, [{\n\t        key: 'connect',\n\t        value: function connect() {\n\t            this.pusher = new Pusher(this.options.key, this.options);\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(name, event, callback) {\n\t            return this.channel(name).listen(event, callback);\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(name) {\n\t            if (!this.channels[name]) {\n\t                this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n\t            }\n\t            return this.channels[name];\n\t        }\n\t    }, {\n\t        key: 'privateChannel',\n\t        value: function privateChannel(name) {\n\t            if (!this.channels['private-' + name]) {\n\t                this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n\t            }\n\t            return this.channels['private-' + name];\n\t        }\n\t    }, {\n\t        key: 'presenceChannel',\n\t        value: function presenceChannel(name) {\n\t            if (!this.channels['presence-' + name]) {\n\t                this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n\t            }\n\t            return this.channels['presence-' + name];\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(name) {\n\t            var _this2 = this;\n\t\n\t            var channels = [name, 'private-' + name, 'presence-' + name];\n\t            channels.forEach(function (name, index) {\n\t                if (_this2.channels[name]) {\n\t                    _this2.channels[name].unsubscribe();\n\t                    delete _this2.channels[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return this.pusher.connection.socket_id;\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.pusher.disconnect();\n\t        }\n\t    }]);\n\t    return PusherConnector;\n\t}(Connector);\n\t\n\tvar SocketIoConnector = function (_Connector) {\n\t    inherits(SocketIoConnector, _Connector);\n\t\n\t    function SocketIoConnector() {\n\t        var _ref;\n\t\n\t        classCallCheck(this, SocketIoConnector);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        var _this = possibleConstructorReturn(this, (_ref = SocketIoConnector.__proto__ || Object.getPrototypeOf(SocketIoConnector)).call.apply(_ref, [this].concat(args)));\n\t\n\t        _this.channels = {};\n\t        return _this;\n\t    }\n\t\n\t    createClass(SocketIoConnector, [{\n\t        key: 'connect',\n\t        value: function connect() {\n\t            var io = this.getSocketIO();\n\t            this.socket = io(this.options.host, this.options);\n\t            return this.socket;\n\t        }\n\t    }, {\n\t        key: 'getSocketIO',\n\t        value: function getSocketIO() {\n\t            if (typeof io !== 'undefined') {\n\t                return io;\n\t            }\n\t            if (this.options.client !== 'undefined') {\n\t                return this.options.client;\n\t            }\n\t            throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(name, event, callback) {\n\t            return this.channel(name).listen(event, callback);\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(name) {\n\t            if (!this.channels[name]) {\n\t                this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n\t            }\n\t            return this.channels[name];\n\t        }\n\t    }, {\n\t        key: 'privateChannel',\n\t        value: function privateChannel(name) {\n\t            if (!this.channels['private-' + name]) {\n\t                this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n\t            }\n\t            return this.channels['private-' + name];\n\t        }\n\t    }, {\n\t        key: 'presenceChannel',\n\t        value: function presenceChannel(name) {\n\t            if (!this.channels['presence-' + name]) {\n\t                this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n\t            }\n\t            return this.channels['presence-' + name];\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(name) {\n\t            var _this2 = this;\n\t\n\t            var channels = [name, 'private-' + name, 'presence-' + name];\n\t            channels.forEach(function (name) {\n\t                if (_this2.channels[name]) {\n\t                    _this2.channels[name].unsubscribe();\n\t                    delete _this2.channels[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return this.socket.id;\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.socket.disconnect();\n\t        }\n\t    }]);\n\t    return SocketIoConnector;\n\t}(Connector);\n\t\n\tvar NullConnector = function (_Connector) {\n\t    inherits(NullConnector, _Connector);\n\t\n\t    function NullConnector() {\n\t        var _ref;\n\t\n\t        classCallCheck(this, NullConnector);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        var _this = possibleConstructorReturn(this, (_ref = NullConnector.__proto__ || Object.getPrototypeOf(NullConnector)).call.apply(_ref, [this].concat(args)));\n\t\n\t        _this.channels = {};\n\t        return _this;\n\t    }\n\t\n\t    createClass(NullConnector, [{\n\t        key: 'connect',\n\t        value: function connect() {}\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(name, event, callback) {\n\t            return new NullChannel();\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(name) {\n\t            return new NullChannel();\n\t        }\n\t    }, {\n\t        key: 'privateChannel',\n\t        value: function privateChannel(name) {\n\t            return new NullPrivateChannel();\n\t        }\n\t    }, {\n\t        key: 'presenceChannel',\n\t        value: function presenceChannel(name) {\n\t            return new NullPresenceChannel();\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(name) {}\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return 'fake-socket-id';\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {}\n\t    }]);\n\t    return NullConnector;\n\t}(Connector);\n\t\n\tvar Echo = function () {\n\t    function Echo(options) {\n\t        classCallCheck(this, Echo);\n\t\n\t        this.options = options;\n\t        if (typeof Vue === 'function' && Vue.http) {\n\t            this.registerVueRequestInterceptor();\n\t        }\n\t        if (typeof axios === 'function') {\n\t            this.registerAxiosRequestInterceptor();\n\t        }\n\t        if (typeof jQuery === 'function') {\n\t            this.registerjQueryAjaxSetup();\n\t        }\n\t        if (this.options.broadcaster == 'pusher') {\n\t            this.connector = new PusherConnector(this.options);\n\t        } else if (this.options.broadcaster == 'socket.io') {\n\t            this.connector = new SocketIoConnector(this.options);\n\t        } else if (this.options.broadcaster == 'null') {\n\t            this.connector = new NullConnector(this.options);\n\t        }\n\t    }\n\t\n\t    createClass(Echo, [{\n\t        key: 'registerVueRequestInterceptor',\n\t        value: function registerVueRequestInterceptor() {\n\t            var _this = this;\n\t\n\t            Vue.http.interceptors.push(function (request, next) {\n\t                if (_this.socketId()) {\n\t                    request.headers.set('X-Socket-ID', _this.socketId());\n\t                }\n\t                next();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'registerAxiosRequestInterceptor',\n\t        value: function registerAxiosRequestInterceptor() {\n\t            var _this2 = this;\n\t\n\t            axios.interceptors.request.use(function (config) {\n\t                if (_this2.socketId()) {\n\t                    config.headers['X-Socket-Id'] = _this2.socketId();\n\t                }\n\t                return config;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'registerjQueryAjaxSetup',\n\t        value: function registerjQueryAjaxSetup() {\n\t            var _this3 = this;\n\t\n\t            if (typeof jQuery.ajax != 'undefined') {\n\t                jQuery.ajaxSetup({\n\t                    beforeSend: function beforeSend(xhr) {\n\t                        if (_this3.socketId()) {\n\t                            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(channel, event, callback) {\n\t            return this.connector.listen(channel, event, callback);\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(_channel) {\n\t            return this.connector.channel(_channel);\n\t        }\n\t    }, {\n\t        key: 'private',\n\t        value: function _private(channel) {\n\t            return this.connector.privateChannel(channel);\n\t        }\n\t    }, {\n\t        key: 'join',\n\t        value: function join(channel) {\n\t            return this.connector.presenceChannel(channel);\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(channel) {\n\t            this.connector.leave(channel);\n\t        }\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return this.connector.socketId();\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.connector.disconnect();\n\t        }\n\t    }]);\n\t    return Echo;\n\t}();\n\t\n\tmodule.exports = Echo;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bb661a2a376b3f892754","import Echo from 'laravel-echo';\n\nexport default {\n    install(Vue, options) {\n        if (!options) {\n            throw new Error(\"[Vue-Echo] cannot locate options\");\n        }\n\n        if (typeof options !== 'object') {\n            throw new Error(\"[Vue-Echo] cannot initiate options\");\n        }\n\n        if(typeof options.socketId == 'function')\n        {\n            Vue.prototype.$echo = options;\n        }\n        else\n        {\n            Vue.prototype.$echo = new Echo(options);\n        }\n\n        Vue.mixin({\n            mounted() {\n                let channel = this.$options['channel'];\n\n                if(channel)\n                {\n                    if(channel.startsWith('private:'))\n                    {\n                        this.channel = this.$echo.private(channel.replace('private:', ''))\n                    }\n                    else if(channel.startsWith('presence:'))\n                    {\n                        this.channel = this.$echo.join(channel.replace('presence:', ''))\n                    }\n                    else\n                    {\n                        this.channel = this.$echo.channel(channel);\n                    }\n\n                    let events = this.$options['echo'];\n\n                    if(events)\n                    {\n                        Object.keys(events).forEach(function(key){\n                            // Bind the VM as second parameter\n                            this.channel.listen(key, (payload) => {\n                                events[key](payload, this);\n                        });\n                        }, this);\n                    }\n                }\n            },\n            beforeDestroy(){\n                let channel = this.$options['channel'];\n\n                if(channel){\n                    if(channel.startsWith('private:'))\n                    {\n                        channel = channel.replace('private:', '');\n                    }\n                    else if(channel.startsWith('presence:'))\n                    {\n                        channel = channel.replace('presence:', '');\n                    }\n\n                    this.$echo.leave(channel);\n                }\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./vue-echo.js","var asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Connector = function () {\n    function Connector(options) {\n        classCallCheck(this, Connector);\n\n        this._defaultOptions = {\n            auth: {\n                headers: {}\n            },\n            authEndpoint: '/broadcasting/auth',\n            broadcaster: 'pusher',\n            csrfToken: null,\n            host: null,\n            key: null,\n            namespace: 'App.Events'\n        };\n        this.setOptions(options);\n        this.connect();\n    }\n\n    createClass(Connector, [{\n        key: 'setOptions',\n        value: function setOptions(options) {\n            this.options = _extends(this._defaultOptions, options);\n            if (this.csrfToken()) {\n                this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n            }\n            return options;\n        }\n    }, {\n        key: 'csrfToken',\n        value: function csrfToken() {\n            var selector = void 0;\n            if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n                return window['Laravel'].csrfToken;\n            } else if (this.options.csrfToken) {\n                return this.options.csrfToken;\n            } else if (typeof document !== 'undefined' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n                return selector.getAttribute('content');\n            }\n            return null;\n        }\n    }]);\n    return Connector;\n}();\n\nvar Channel = function () {\n    function Channel() {\n        classCallCheck(this, Channel);\n    }\n\n    createClass(Channel, [{\n        key: 'notification',\n        value: function notification(callback) {\n            return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n        }\n    }, {\n        key: 'listenForWhisper',\n        value: function listenForWhisper(event, callback) {\n            return this.listen('.client-' + event, callback);\n        }\n    }]);\n    return Channel;\n}();\n\nvar EventFormatter = function () {\n    function EventFormatter(namespace) {\n        classCallCheck(this, EventFormatter);\n\n        this.setNamespace(namespace);\n    }\n\n    createClass(EventFormatter, [{\n        key: 'format',\n        value: function format(event) {\n            if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n                return event.substr(1);\n            } else if (this.namespace) {\n                event = this.namespace + '.' + event;\n            }\n            return event.replace(/\\./g, '\\\\');\n        }\n    }, {\n        key: 'setNamespace',\n        value: function setNamespace(value) {\n            this.namespace = value;\n        }\n    }]);\n    return EventFormatter;\n}();\n\nvar PusherChannel = function (_Channel) {\n    inherits(PusherChannel, _Channel);\n\n    function PusherChannel(pusher, name, options) {\n        classCallCheck(this, PusherChannel);\n\n        var _this = possibleConstructorReturn(this, (PusherChannel.__proto__ || Object.getPrototypeOf(PusherChannel)).call(this));\n\n        _this.name = name;\n        _this.pusher = pusher;\n        _this.options = options;\n        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n        _this.subscribe();\n        return _this;\n    }\n\n    createClass(PusherChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {\n            this.subscription = this.pusher.subscribe(this.name);\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            this.pusher.unsubscribe(this.name);\n        }\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            this.on(this.eventFormatter.format(event), callback);\n            return this;\n        }\n    }, {\n        key: 'stopListening',\n        value: function stopListening(event) {\n            this.subscription.unbind(this.eventFormatter.format(event));\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            this.subscription.bind(event, callback);\n            return this;\n        }\n    }]);\n    return PusherChannel;\n}(Channel);\n\nvar PusherPrivateChannel = function (_PusherChannel) {\n    inherits(PusherPrivateChannel, _PusherChannel);\n\n    function PusherPrivateChannel() {\n        classCallCheck(this, PusherPrivateChannel);\n        return possibleConstructorReturn(this, (PusherPrivateChannel.__proto__ || Object.getPrototypeOf(PusherPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(PusherPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n            return this;\n        }\n    }]);\n    return PusherPrivateChannel;\n}(PusherChannel);\n\nvar PusherPresenceChannel = function (_PusherChannel) {\n    inherits(PusherPresenceChannel, _PusherChannel);\n\n    function PusherPresenceChannel() {\n        classCallCheck(this, PusherPresenceChannel);\n        return possibleConstructorReturn(this, (PusherPresenceChannel.__proto__ || Object.getPrototypeOf(PusherPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(PusherPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            this.on('pusher:subscription_succeeded', function (data) {\n                callback(Object.keys(data.members).map(function (k) {\n                    return data.members[k];\n                }));\n            });\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            this.on('pusher:member_added', function (member) {\n                callback(member.info);\n            });\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            this.on('pusher:member_removed', function (member) {\n                callback(member.info);\n            });\n            return this;\n        }\n    }, {\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n            return this;\n        }\n    }]);\n    return PusherPresenceChannel;\n}(PusherChannel);\n\nvar SocketIoChannel = function (_Channel) {\n    inherits(SocketIoChannel, _Channel);\n\n    function SocketIoChannel(socket, name, options) {\n        classCallCheck(this, SocketIoChannel);\n\n        var _this = possibleConstructorReturn(this, (SocketIoChannel.__proto__ || Object.getPrototypeOf(SocketIoChannel)).call(this));\n\n        _this.events = {};\n        _this.name = name;\n        _this.socket = socket;\n        _this.options = options;\n        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n        _this.subscribe();\n        _this.configureReconnector();\n        return _this;\n    }\n\n    createClass(SocketIoChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {\n            this.socket.emit('subscribe', {\n                channel: this.name,\n                auth: this.options.auth || {}\n            });\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            this.unbind();\n            this.socket.emit('unsubscribe', {\n                channel: this.name,\n                auth: this.options.auth || {}\n            });\n        }\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            this.on(this.eventFormatter.format(event), callback);\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            var _this2 = this;\n\n            var listener = function listener(channel, data) {\n                if (_this2.name == channel) {\n                    callback(data);\n                }\n            };\n            this.socket.on(event, listener);\n            this.bind(event, listener);\n        }\n    }, {\n        key: 'configureReconnector',\n        value: function configureReconnector() {\n            var _this3 = this;\n\n            var listener = function listener() {\n                _this3.subscribe();\n            };\n            this.socket.on('reconnect', listener);\n            this.bind('reconnect', listener);\n        }\n    }, {\n        key: 'bind',\n        value: function bind(event, callback) {\n            this.events[event] = this.events[event] || [];\n            this.events[event].push(callback);\n        }\n    }, {\n        key: 'unbind',\n        value: function unbind() {\n            var _this4 = this;\n\n            Object.keys(this.events).forEach(function (event) {\n                _this4.events[event].forEach(function (callback) {\n                    _this4.socket.removeListener(event, callback);\n                });\n                delete _this4.events[event];\n            });\n        }\n    }]);\n    return SocketIoChannel;\n}(Channel);\n\nvar SocketIoPrivateChannel = function (_SocketIoChannel) {\n    inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n    function SocketIoPrivateChannel() {\n        classCallCheck(this, SocketIoPrivateChannel);\n        return possibleConstructorReturn(this, (SocketIoPrivateChannel.__proto__ || Object.getPrototypeOf(SocketIoPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(SocketIoPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.socket.emit('client event', {\n                channel: this.name,\n                event: 'client-' + eventName,\n                data: data\n            });\n            return this;\n        }\n    }]);\n    return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\nvar SocketIoPresenceChannel = function (_SocketIoPrivateChann) {\n    inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n    function SocketIoPresenceChannel() {\n        classCallCheck(this, SocketIoPresenceChannel);\n        return possibleConstructorReturn(this, (SocketIoPresenceChannel.__proto__ || Object.getPrototypeOf(SocketIoPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(SocketIoPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            this.on('presence:subscribed', function (members) {\n                callback(members.map(function (m) {\n                    return m.user_info;\n                }));\n            });\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            this.on('presence:joining', function (member) {\n                return callback(member.user_info);\n            });\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            this.on('presence:leaving', function (member) {\n                return callback(member.user_info);\n            });\n            return this;\n        }\n    }]);\n    return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\nvar NullChannel = function (_Channel) {\n    inherits(NullChannel, _Channel);\n\n    function NullChannel() {\n        classCallCheck(this, NullChannel);\n        return possibleConstructorReturn(this, (NullChannel.__proto__ || Object.getPrototypeOf(NullChannel)).apply(this, arguments));\n    }\n\n    createClass(NullChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {}\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {}\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            return this;\n        }\n    }, {\n        key: 'stopListening',\n        value: function stopListening(event) {\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            return this;\n        }\n    }]);\n    return NullChannel;\n}(Channel);\n\nvar NullPrivateChannel = function (_NullChannel) {\n    inherits(NullPrivateChannel, _NullChannel);\n\n    function NullPrivateChannel() {\n        classCallCheck(this, NullPrivateChannel);\n        return possibleConstructorReturn(this, (NullPrivateChannel.__proto__ || Object.getPrototypeOf(NullPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(NullPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            return this;\n        }\n    }]);\n    return NullPrivateChannel;\n}(NullChannel);\n\nvar NullPresenceChannel = function (_NullChannel) {\n    inherits(NullPresenceChannel, _NullChannel);\n\n    function NullPresenceChannel() {\n        classCallCheck(this, NullPresenceChannel);\n        return possibleConstructorReturn(this, (NullPresenceChannel.__proto__ || Object.getPrototypeOf(NullPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(NullPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            return this;\n        }\n    }, {\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            return this;\n        }\n    }]);\n    return NullPresenceChannel;\n}(NullChannel);\n\nvar PusherConnector = function (_Connector) {\n    inherits(PusherConnector, _Connector);\n\n    function PusherConnector() {\n        var _ref;\n\n        classCallCheck(this, PusherConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = PusherConnector.__proto__ || Object.getPrototypeOf(PusherConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(PusherConnector, [{\n        key: 'connect',\n        value: function connect() {\n            this.pusher = new Pusher(this.options.key, this.options);\n        }\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return this.channel(name).listen(event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            if (!this.channels[name]) {\n                this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n            }\n            return this.channels[name];\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            if (!this.channels['private-' + name]) {\n                this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n            }\n            return this.channels['private-' + name];\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            if (!this.channels['presence-' + name]) {\n                this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n            }\n            return this.channels['presence-' + name];\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {\n            var _this2 = this;\n\n            var channels = [name, 'private-' + name, 'presence-' + name];\n            channels.forEach(function (name, index) {\n                if (_this2.channels[name]) {\n                    _this2.channels[name].unsubscribe();\n                    delete _this2.channels[name];\n                }\n            });\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.pusher.connection.socket_id;\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.pusher.disconnect();\n        }\n    }]);\n    return PusherConnector;\n}(Connector);\n\nvar SocketIoConnector = function (_Connector) {\n    inherits(SocketIoConnector, _Connector);\n\n    function SocketIoConnector() {\n        var _ref;\n\n        classCallCheck(this, SocketIoConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = SocketIoConnector.__proto__ || Object.getPrototypeOf(SocketIoConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(SocketIoConnector, [{\n        key: 'connect',\n        value: function connect() {\n            var io = this.getSocketIO();\n            this.socket = io(this.options.host, this.options);\n            return this.socket;\n        }\n    }, {\n        key: 'getSocketIO',\n        value: function getSocketIO() {\n            if (typeof io !== 'undefined') {\n                return io;\n            }\n            if (this.options.client !== 'undefined') {\n                return this.options.client;\n            }\n            throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n        }\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return this.channel(name).listen(event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            if (!this.channels[name]) {\n                this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n            }\n            return this.channels[name];\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            if (!this.channels['private-' + name]) {\n                this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n            }\n            return this.channels['private-' + name];\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            if (!this.channels['presence-' + name]) {\n                this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n            }\n            return this.channels['presence-' + name];\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {\n            var _this2 = this;\n\n            var channels = [name, 'private-' + name, 'presence-' + name];\n            channels.forEach(function (name) {\n                if (_this2.channels[name]) {\n                    _this2.channels[name].unsubscribe();\n                    delete _this2.channels[name];\n                }\n            });\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.socket.id;\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.socket.disconnect();\n        }\n    }]);\n    return SocketIoConnector;\n}(Connector);\n\nvar NullConnector = function (_Connector) {\n    inherits(NullConnector, _Connector);\n\n    function NullConnector() {\n        var _ref;\n\n        classCallCheck(this, NullConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = NullConnector.__proto__ || Object.getPrototypeOf(NullConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(NullConnector, [{\n        key: 'connect',\n        value: function connect() {}\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return new NullChannel();\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            return new NullChannel();\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            return new NullPrivateChannel();\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            return new NullPresenceChannel();\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {}\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return 'fake-socket-id';\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {}\n    }]);\n    return NullConnector;\n}(Connector);\n\nvar Echo = function () {\n    function Echo(options) {\n        classCallCheck(this, Echo);\n\n        this.options = options;\n        if (typeof Vue === 'function' && Vue.http) {\n            this.registerVueRequestInterceptor();\n        }\n        if (typeof axios === 'function') {\n            this.registerAxiosRequestInterceptor();\n        }\n        if (typeof jQuery === 'function') {\n            this.registerjQueryAjaxSetup();\n        }\n        if (this.options.broadcaster == 'pusher') {\n            this.connector = new PusherConnector(this.options);\n        } else if (this.options.broadcaster == 'socket.io') {\n            this.connector = new SocketIoConnector(this.options);\n        } else if (this.options.broadcaster == 'null') {\n            this.connector = new NullConnector(this.options);\n        }\n    }\n\n    createClass(Echo, [{\n        key: 'registerVueRequestInterceptor',\n        value: function registerVueRequestInterceptor() {\n            var _this = this;\n\n            Vue.http.interceptors.push(function (request, next) {\n                if (_this.socketId()) {\n                    request.headers.set('X-Socket-ID', _this.socketId());\n                }\n                next();\n            });\n        }\n    }, {\n        key: 'registerAxiosRequestInterceptor',\n        value: function registerAxiosRequestInterceptor() {\n            var _this2 = this;\n\n            axios.interceptors.request.use(function (config) {\n                if (_this2.socketId()) {\n                    config.headers['X-Socket-Id'] = _this2.socketId();\n                }\n                return config;\n            });\n        }\n    }, {\n        key: 'registerjQueryAjaxSetup',\n        value: function registerjQueryAjaxSetup() {\n            var _this3 = this;\n\n            if (typeof jQuery.ajax != 'undefined') {\n                jQuery.ajaxSetup({\n                    beforeSend: function beforeSend(xhr) {\n                        if (_this3.socketId()) {\n                            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n                        }\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'listen',\n        value: function listen(channel, event, callback) {\n            return this.connector.listen(channel, event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(_channel) {\n            return this.connector.channel(_channel);\n        }\n    }, {\n        key: 'private',\n        value: function _private(channel) {\n            return this.connector.privateChannel(channel);\n        }\n    }, {\n        key: 'join',\n        value: function join(channel) {\n            return this.connector.presenceChannel(channel);\n        }\n    }, {\n        key: 'leave',\n        value: function leave(channel) {\n            this.connector.leave(channel);\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.connector.socketId();\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.connector.disconnect();\n        }\n    }]);\n    return Echo;\n}();\n\nmodule.exports = Echo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/laravel-echo/dist/echo.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}